import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import java.lang.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'reverseArray' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts INTEGER_ARRAY a as parameter.
     */
     
//  Arrays.stream(ints).boxed().collect(Collectors.toList());

    public static List<Integer> reverseArray(List<Integer> a) {
    // Write your code here
    //    int [] arr  = a.stream().mapToInt(Integer::intValue).toArray();
    
    Collections.reverse(a);
    
      int []arr = new int[a.size()];
      arr =  a.stream().mapToInt(Integer::intValue).toArray();

        return IntStream.of(arr).boxed().collect(Collectors.toList());
    }
    static void swap(int a[], int i,int j)
    {
        int temp = a[i];
            a[i] = a[j];
            a[j] = temp;
    } 

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> res = Result.reverseArray(arr);

        bufferedWriter.write(
            res.stream()
                .map(Object::toString)
                .collect(joining(" "))
            + "\n"
        );

        bufferedReader.close();
        bufferedWriter.close();
    }
}
